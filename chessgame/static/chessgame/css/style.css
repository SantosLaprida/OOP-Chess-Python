/* Main chess board */
.chess-board {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  width: 70vh;
  height: 70vh;
  position: relative;
  transition: transform 0.5s ease-in-out;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  width: 70vh;
  height: 70vh;
  position: relative;
  transition: transform 0.5s ease-in-out;
}

/* Square containers */
.chess-board > div {
  width: 100%;
  height: 100%;
  position: relative;
  width: 100%;
  height: 100%; /* Changed from 0 */
  display: flex; /* Added */
  align-items: center; /* Added */
  justify-content: center; /* Added */
}

/* Remove the ::after pseudo-element since we don't need it anymore */
/* .chess-board > div::after was removed */

/* Square colors */
.chess-board .white {
  background: rgb(233, 202, 135);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  background: rgb(233, 202, 135);
}

.chess-board .black {
  background: rgb(211, 126, 30);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  background: rgb(211, 126, 30);
}

/* Piece styling */
.chess-board img {
  width: 90%;
  height: 90%;
  object-fit: contain;
  pointer-events: all; /* Changed from auto */
  user-select: none; /* Added to prevent unwanted selection */
  -webkit-user-drag: element; /* Added to ensure dragging works in different browsers */
  cursor: grab; /* Added to show it's draggable */
}

/* Hidden pieces */
.chess-board img[style*="visibility: hidden"] {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}

/* Dragging state */
.chess-board img.dragging {
  opacity: 0.5;
  cursor: grabbing; /* Changed from grab while dragging */
}

/* Highlighting */
.highlight {
  background-color: rgba(0, 255, 115, 0.7);
}

.chess-board .white.highlight,
.chess-board .black.highlight {
  background-color: rgba(255, 230, 0, 0.7);
}

.chess-board img {
  width: 90%;
  height: 90%;
  object-fit: contain;
  pointer-events: all;
  user-select: none;
}

.chess-board img {
  width: 90%;
  height: 90%;
  object-fit: contain;
  pointer-events: all;
  user-select: none;
}

/* Piece styling */
.chess-board img {
  width: 90%;
  height: 90%;
  object-fit: contain;
  pointer-events: all; /* Changed from auto */
  user-select: none; /* Added to prevent unwanted selection */
  -webkit-user-drag: element; /* Added to ensure dragging works in different browsers */
  cursor: grab; /* Added to show it's draggable */
}

/* Hidden pieces */
.chess-board img[style*="visibility: hidden"] {
  visibility: hidden;
  opacity: 0;
  pointer-events: none;
}

/* Dragging state */
.chess-board img.dragging {
  opacity: 0.5;
  cursor: grabbing; /* Changed from grab while dragging */
}

/* Highlighting */
.highlight {
  background-color: rgba(0, 255, 115, 0.7);
}

.chess-board .white.highlight,
.chess-board .black.highlight {
  background-color: rgba(255, 230, 0, 0.7);
}

/* Background */
.backGround {
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgb(143, 148, 143);
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgb(143, 148, 143);
}

/* Board flip animation */
.chess-board.dadoVuelta {
  transform: rotateX(180deg);
  transform: rotateX(180deg);
}

/* Flip button styling */
.flipIcon {
  position: absolute;
  bottom: 0;
  background-color: transparent;
  position: absolute;
  bottom: 0;
  background-color: transparent;
}

.btnRotate {
  background: transparent;
  border: none;
  background: transparent;
  border: none;
  cursor: pointer;
}

.icon {
  position: absolute;
  bottom: 1.5em;
  position: absolute;
  bottom: 1.5em;
}

.highlight {
  /*border: 2px solid rgb(255, 111, 0); /* Corrected color value */
  background-color: rgb(0, 255, 115); /* Corrected color value */
}

.chess-board .white.highlight {
  background-color: rgb(255, 230, 0); /* Corrected color value */
}

.chess-board .black.highlight {
  background-color: rgb(255, 230, 0); /* Corrected color value */
}
